server.port=9999
spring.main.banner-mode=off
logging.file.name=Creditz_log.txt

# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database "netgloo_blog"
spring.datasource.url = jdbc:mysql://localhost:3306/rms?useSSL=false

# Username and password
spring.datasource.username = root
spring.datasource.password = root

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update
#//logging.level.org.springframework=DEBUG
 
 

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

spring.jpa.open-in-view=false



#regarding email


#Make sure less secure App is enabled at link
#https://myaccount.google.com/lesssecureapps

spring.mail.host = smtp.gmail.com
spring.mail.port=25
#sender's email & password
spring.mail.username=creditzworkmail@gmail.com
spring.mail.password=CreditzMail

#Below Properties are needed for maintaining the session.
#Two Step verification should not be enabled for gmail.

spring.mail.properties.mail.smtp.auth = true
spring.mail.properties.mail.smtp.socketFactory.port = 465
spring.mail.properties.mail.smtp.socketFactory.class = javax.net.ssl.SSLSocketFactory
spring.mail.properties.mail.smtp.socketFactory.fallback = false

